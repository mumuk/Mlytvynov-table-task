import React from 'react';
import styles from './Description.module.css';

const TaskDescription: React.FC = () => {
  return (
    <div className={styles.root}>
      <h1 className={styles.h1}>Опис завдання</h1>
      <p className={styles.p}>
        Завдання: Створити дві сторінки з роутингом та авторизацією. Стек технологій – React, React Router, Redux, RTK,
        Axios, TypeScript.
      </p>
      <h2 className={styles.h2}>LoginPage</h2>
      <p className={styles.p}>
        Доступна незареєстрованим користувачам. Якщо користувач авторизований, він переадресовується на TablePage.
        Містить форму з двома полями email та password.
        У БД є один користувач, що переадрисовується (username: testuser password: testpassword123).
        При успішній авторизації користувач переадресовується на TablePage.
        Якщо ім'я користувача або пароль неправильні, показати у формі на основі відповіді від сервера.
        Реєстрація не передбачена завданням.
        На цій сторінці акцент зробити на валідації форми та роботі зі статусами запитів. Сторінка має бути максимально
        користувач-френдлі.
      </p>
      <h2 className={styles.h2}>TablePage</h2>
      <p className={styles.p}>
        Містить таблицю із полями. Доступна лише авторизованим користувачам. Якщо користувач не авторизований, то
        переадресація на LoginPage.
        Дані для таблиці виходять по https://technical-task-api.icapgroupgmbh.com/api/table/
        Для всіх полів повинна бути опція редагування.
        Всі поля мають валідацію на бекенді - можна подивитися в swagger по посиланню -
        https://technical-task-api.icapgroupgmbh.com/api/swagger/
        Деталей вмісту таблиці поки немає, т.к. АПИ не працюють.
        На цій сторінці акцент зробити на роботі з даними та їх отриманні та редагуванні.
      </p>
      <h2 className={styles.h2}>Створення проекту та технології</h2>
      <p className={styles.p}>
        Був вибран vite як найшвидший. UI бібліотеки не обирав, точніше було бажання взяти бустрап або тайлвінд
        спочатку, але я не дизайнер і обирати красу стилю в мене багато часу бере, коли нема ідей. Тому я просто
        накидав трохи якихось стилів.
        React-table - коли зрозумів що звичайнми компонентам або дового або порнографічно. До цього з цією таблицею не
        працював.
      </p>
      <h2 className={styles.h2}>Складності</h2>
      <p className={styles.p}>
        Ну це які стилі і чи надо чипурити - зайняло час. І багато часу зайняло привести до типів react-table. Ну і
        зайвого наробив типо - CRUD для персон.
        Якщо робив би з пагінацією то треба було React Query брати - там зручно с пагінацією працювати, але зрозумів це
        запізно.
      </p>
    </div>
  );
};


export default TaskDescription;
